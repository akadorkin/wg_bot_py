# keyboards.py

from aiogram.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from config import AUTHORIZED_USER_ID

def get_main_menu_kb(user_id: int) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    buttons = [
        KeyboardButton("üîë –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á"),
        KeyboardButton("üõ† –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç VPN"),
        KeyboardButton("üí¨ –ü–æ–∂–µ–ª–∞–Ω–∏—è –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è")
    ]
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
    if user_id == AUTHORIZED_USER_ID:
        buttons.extend([
            KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
            KeyboardButton("üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º"),
            KeyboardButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–ª—é—á–∏"),
            KeyboardButton("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏")
        ])
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(*buttons)
    return kb

def access_request_kb() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø".
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º InlineKeyboardMarkup –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ callback_query
    request_button = InlineKeyboardButton("üîí –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø", callback_data="request_access")
    kb = InlineKeyboardMarkup()
    kb.add(request_button)
    return kb

def create_authorize_kb(user_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "‚úÖ –î–∞" –∏ "‚ùå –ù–µ—Ç".
    """
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º InlineKeyboardMarkup —Å callback_data, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏ user_id
    yes_button = InlineKeyboardButton("‚úÖ –î–∞", callback_data=f"authorize_yes_{user_id}")
    no_button = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data=f"authorize_no_{user_id}")
    kb = InlineKeyboardMarkup()
    kb.add(yes_button, no_button)
    return kb

def get_back_kb() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "üîô –ù–∞–∑–∞–¥".
    """
    back_button = KeyboardButton("üîô –ù–∞–∑–∞–¥")
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(back_button)
    return kb

def get_users_keyboard(user_list: list) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    user_list: —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (user_display_text, user_id)
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for user_display, user_id in user_list:
        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–º—è/–Ω–∏–∫ –∏ ID
        button_text = f"{user_display} (ID: {user_id})"
        kb.add(KeyboardButton(button_text))
    kb.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    return kb

def get_user_actions_keyboard(is_banned: bool) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    is_banned: bool, —É–∫–∞–∑—ã–≤–∞–µ—Ç, –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    if is_banned:
        kb.add(KeyboardButton("–†–∞–∑–±–∞–Ω–∏—Ç—å"))
    else:
        kb.add(KeyboardButton("–ó–∞–±–∞–Ω–∏—Ç—å"))
    kb.add(KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—á–Ω—ã–π –ª–∏–º–∏—Ç –∫–ª—é—á–µ–π"))
    kb.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    return kb

def get_stats_user_actions_keyboard() -> ReplyKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    return kb

